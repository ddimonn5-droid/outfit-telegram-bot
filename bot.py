# Monkey-patch –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–±–ª–µ–º —Å imghdr –∏ Updater
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º monkey-patch –¥–ª—è imghdr
try:
    from imghdr_monkeypatch import ImghdrModule
    sys.modules['imghdr'] = ImghdrModule()
    print("‚úÖ Monkey-patch –¥–ª—è imghdr –ø—Ä–∏–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è monkey-patch: {e}")

# --- –¢–≤–æ–π –∫–æ–¥ –Ω–∏–∂–µ ---
import logging
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler,
    MessageHandler, ContextTypes, filters
)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
if not TOKEN:
    logger.error("‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    sys.exit(1)

# --- –ë–∞–∑–∞ –∞—É—Ç—Ñ–∏—Ç–æ–≤ ---
OUTFITS = {
    "–∫—ç–∂—É–∞–ª": [
        {"name": "–§—É—Ç–±–æ–ª–∫–∞", "url": "https://samokat.ua/images/products/ethic-casual-suspect-t-shirt-01_24w.jpg"},
        {"name": "–î–∂–∏–Ω—Å—ã", "url": "https://2hand.com.ua/image/cache/catalog/3111856e8956381546_4406-1365x1024.jpg"},
        {"name": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏", "url": "https://yastreb.ua/components/com_jshopping/files/img_products/full_7777.jpg"},
    ],
    "–≤–µ—á–µ—Ä–∏–Ω–∫–∞": [
        {"name": "–ü–∏–¥–∂–∞–∫", "url": "https://ae01.alicdn.com/kf/S772d2377cb7c4c01a69fd7c1d8175df4z.jpg"},
        {"name": "–†—É–±–∞—à–∫–∞", "url": "https://content.rozetka.com.ua/goods/images/big/591651531.jpg"},
        {"name": "–ë—Ä—é–∫–∏", "url": "https://ae01.alicdn.com/kf/Saaacdd53cdf94f2fab51aab53bab0fecB.jpg"},
        {"name": "–¢—É—Ñ–ª–∏", "url": "https://tufelek.kiev.ua/images/products/kupit_obuv_025.jpg"},
    ],
    "–æ—Ñ–∏—Å": [
        {"name": "–ë–µ–ª–∞—è —Ä—É–±–∞—à–∫–∞", "url": "https://musthave.ua/uploads/products/17781/00000033510.webp"},
        {"name": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –±—Ä—é–∫–∏", "url": "https://ager.ua/image/cache/webp/catalog/import_files/be/72992fb7-e030-11e0-80a9-0015c56feef5/bef8931f-585d-11ef-8588-d8cb8a9c13c3-667x1000.webp"},
        {"name": "–¢—É—Ñ–ª–∏", "url": "https://img2.ans-media.com/i/840x1260/AW25-OBM1W0-89X_F1.webp?v=1756274023"}
    ]
}

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_text = ("üëï *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –∞—É—Ç—Ñ–∏—Ç–æ–≤!* üëñ\n\n"
                   "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –æ–¥–µ–∂–¥—ã.\n\n"
                   "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
                   "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                   "/styles - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏\n"
                   "/help - –ø–æ–º–æ—â—å\n\n"
                   "üí° *–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å—Ç–∏–ª–µ–π:*\n"
                   "‚Ä¢ –∫—ç–∂—É–∞–ª\n"
                   "‚Ä¢ –≤–µ—á–µ—Ä–∏–Ω–∫–∞\n"
                   "‚Ä¢ –æ—Ñ–∏—Å\n\n"
                   "–ò —è –ø–æ–∫–∞–∂—É –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–æ–º–ø–ª–µ–∫—Ç –æ–¥–µ–∂–¥—ã!")
    await update.message.reply_text(welcome_text, parse_mode='Markdown')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = ("ü§ñ *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n\n"
                "1. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: '–∫—ç–∂—É–∞–ª')\n"
                "2. –Ø –ø—Ä–∏—à–ª—é –≤–∞–º –ø–æ–¥–±–æ—Ä–∫—É –æ–¥–µ–∂–¥—ã –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç–∏–ª—è\n"
                "3. –ö–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞ –æ–¥–µ–∂–¥—ã\n\n"
                "üìù *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
                "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                "/styles - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Ç–∏–ª–∏\n"
                "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
                "üéØ *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏:* " + ", ".join(f"'{key}'" for key in OUTFITS.keys()))
    await update.message.reply_text(help_text, parse_mode='Markdown')

async def list_styles(update: Update, context: ContextTypes.DEFAULT_TYPE):
    styles_text = "üé® *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏ –æ–¥–µ–∂–¥—ã:*\n\n"
    for style in OUTFITS.keys():
        styles_text += f"‚Ä¢ {style.capitalize()} - {len(OUTFITS[style])} —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n"
    styles_text += "\nüìù –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∞—É—Ç—Ñ–∏—Ç!"
    await update.message.reply_text(styles_text, parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.message.text.lower().strip()
        if query not in OUTFITS:
            available_styles = ", ".join(f"'{key}'" for key in OUTFITS.keys())
            await update.message.reply_text(f"‚ùå –°—Ç–∏–ª—å '{query}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏: {available_styles}\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /styles —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫.")
            return

        outfit = OUTFITS[query]
        await update.message.reply_text(f"üîÑ –ó–∞–≥—Ä—É–∂–∞—é –∞—É—Ç—Ñ–∏—Ç –¥–ª—è —Å—Ç–∏–ª—è '{query}'...\nüì¶ –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(outfit)}")

        for item in outfit:
            try:
                await update.message.reply_photo(photo=item["url"], caption=f"üëï {item['name']}\n#{(query)}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
                await update.message.reply_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: {item['name']}")

        await update.message.reply_text(f"‚úÖ –ê—É—Ç—Ñ–∏—Ç –¥–ª—è —Å—Ç–∏–ª—è '{query}' –≥–æ—Ç–æ–≤!\n\n–•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—å? –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.")

    except Exception as e:
        logger.error(f"Unexpected error in handle_message: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f'Update {update} caused error {context.error}')
    if hasattr(update, "message") and update.message:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# --- main ---
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("styles", list_styles))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.add_error_handler(error_handler)

    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–Ω–æ–≤—ã–π —Å—Ç–∏–ª—å)...")
    logger.info(f"üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏: {list(OUTFITS.keys())}")
    logger.info("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

    app.run_polling()

if __name__ == "__main__":
    main()
